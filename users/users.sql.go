// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package users

import (
	"context"

	"github.com/jackc/pgtype"
)

const addUser = `-- name: AddUser :one
INSERT INTO users (
  role
) VALUES (
  $1
)
RETURNING id, role, create_time
`

func (q *Queries) AddUser(ctx context.Context, role Role) (User, error) {
	row := q.db.QueryRowContext(ctx, addUser, role)
	var i User
	err := row.Scan(&i.ID, &i.Role, &i.CreateTime)
	return i, err
}

const deleteUser = `-- name: DeleteUser :one
DELETE FROM users
WHERE id = $1
RETURNING id, role, create_time
`

func (q *Queries) DeleteUser(ctx context.Context, id pgtype.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, deleteUser, id)
	var i User
	err := row.Scan(&i.ID, &i.Role, &i.CreateTime)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, role, create_time FROM users
WHERE id = $1
`

func (q *Queries) GetUser(ctx context.Context, id pgtype.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(&i.ID, &i.Role, &i.CreateTime)
	return i, err
}
